// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  password     String
  email        String   @unique
  fullName     String
  avatar       String
  posts        Post[]
  comments     Comment[]
  likes        Like[]

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}


model Post {
  id              Int       @id @default(autoincrement())
  title           String
  description     String
  imageUrl        String?
  videoUrl        String?
  authorId        Int
  likes_count     Int       @default(0)
  comments_count  Int       @default(0)
  author          User      @relation(fields: [authorId], references: [id] , onDelete: Cascade)
  comments        Comment[]
  likes           Like[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}


model Comment {
  id              Int       @id @default(autoincrement())
  content         String
  authorId        Int
  postId          Int
  likes_count     Int       @default(0)
  author          User      @relation(fields: [authorId], references: [id] , onDelete: Cascade)
  post            Post      @relation(fields: [postId], references: [id],onDelete: Cascade)
  likes           Like[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Like {
  id              Int       @id @default(autoincrement())
  userId          Int
  postId          Int?
  commentId       Int?
  user            User      @relation(fields: [userId], references: [id],onDelete: Cascade)
  post            Post?     @relation(fields: [postId], references: [id],onDelete: Cascade)
  comment         Comment?  @relation(fields: [commentId], references: [id],onDelete: Cascade)

  createdAt       DateTime  @default(now())
}